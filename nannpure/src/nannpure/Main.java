package nannpure;

public class Main {
	public static int[][] createBord(){
		int[][] bord = {
//				{1,2,3,4,5,6,7,8,9},
//				{4,0,6,7,8,9,1,2,3},
//				{7,8,9,1,2,3,4,5,6},
//				{2,3,4,5,6,7,8,9,1},
//				{5,6,7,8,9,1,2,3,4},
//				{8,9,1,2,3,4,5,6,7},
//				{3,4,5,6,7,8,9,1,2},
//				{6,7,8,9,1,2,3,4,5},
//				{9,1,0,3,4,5,6,7,8}
				
//				{0,0,0,0,8,0,3,0,0},
//				{0,0,0,0,0,7,0,0,0},
//				{4,0,0,0,0,0,0,6,2},
//				{0,8,0,0,0,0,1,5,0},
//				{0,2,0,0,0,9,0,0,0},
//				{9,0,7,0,0,0,0,8,3},
//				{0,0,2,0,9,0,7,0,0},
//				{0,0,3,5,0,0,9,0,0},
//				{0,0,6,7,2,4,0,0,8}
				
//				{0,0,0,0,0,0,0,0,0},				
//				{0,0,0,0,0,0,0,0,0},				
//				{0,0,0,0,0,0,0,0,0},				
//				{0,0,0,0,0,0,0,0,0},				
//				{0,0,0,0,0,0,0,0,0},				
//				{0,0,0,0,0,0,0,0,0},				
//				{0,0,0,0,0,0,1,5,7},				
//				{0,0,0,0,0,0,9,2,8},				
//				{0,0,0,0,0,0,3,4,6}				

				{0,0,8,0,0,0,3,0,0},				
				{0,0,7,3,0,2,1,4,0},				
				{0,0,4,1,0,0,0,0,0},				
				{0,0,0,0,6,0,8,3,0},				
				{0,0,1,7,0,0,6,0,0},				
				{0,4,5,0,0,0,7,0,0},				
				{0,1,0,0,0,0,0,0,0},				
				{5,0,0,0,0,1,0,0,0},				
				{0,0,0,9,8,0,0,0,7}
		};
		return bord;
	}
	public static void main(String[] args) {
		int[][] bord = createBord();
		int count = 0;
		Rule r = new Rule();
		Display d = new Display();
		Play p = new Play();
		d.display();
		
		p.allTrue();
//		p.allLook();
		while (!(r.allRule()  && !r.allZerochack()) ) {
			count ++;
//			d.display();
			p.input();

		}
		
		System.out.println("I—¹");
		d.display();
		if(r.allRule() && !r.allZerochack())System.out.println(count+"回で終了");
		else if(r.allRule());
	}


}

